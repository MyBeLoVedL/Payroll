// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type EmployeesPaymentMethod string

const (
	EmployeesPaymentMethodPickUp  EmployeesPaymentMethod = "pick_up"
	EmployeesPaymentMethodMail    EmployeesPaymentMethod = "mail"
	EmployeesPaymentMethodDeposit EmployeesPaymentMethod = "deposit"
)

func (e *EmployeesPaymentMethod) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EmployeesPaymentMethod(s)
	case string:
		*e = EmployeesPaymentMethod(s)
	default:
		return fmt.Errorf("unsupported scan type for EmployeesPaymentMethod: %T", src)
	}
	return nil
}

type EmployeesType string

const (
	EmployeesTypeHour         EmployeesType = "hour"
	EmployeesTypeSalaried     EmployeesType = "salaried"
	EmployeesTypeCommissioned EmployeesType = "commissioned"
)

func (e *EmployeesType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EmployeesType(s)
	case string:
		*e = EmployeesType(s)
	default:
		return fmt.Errorf("unsupported scan type for EmployeesType: %T", src)
	}
	return nil
}

type Employee struct {
	ID                    int64                  `json:"id"`
	Name                  sql.NullString         `json:"name"`
	Password              sql.NullString         `json:"password"`
	Type                  EmployeesType          `json:"type"`
	Mail                  string                 `json:"mail"`
	SocialSecurityNumber  string                 `json:"social_security_number"`
	StandardTaxDeductions string                 `json:"standard_tax_deductions"`
	OtherDeductions       string                 `json:"other_deductions"`
	PhoneNumber           string                 `json:"phone_number"`
	SalaryRate            string                 `json:"salary_rate"`
	HourLimit             sql.NullInt32          `json:"hour_limit"`
	PaymentMethod         EmployeesPaymentMethod `json:"payment_method"`
	Deleted               sql.NullInt32          `json:"deleted"`
	Root                  sql.NullInt32          `json:"root"`
}

type EmployeeAccount struct {
	ID            int64  `json:"id"`
	BankName      string `json:"bank_name"`
	AccountNumber string `json:"account_number"`
}

type OrderInfo struct {
	OrderID   int64  `json:"order_id"`
	ProductID int64  `json:"product_id"`
	Amount    string `json:"amount"`
}

type Paycheck struct {
	ID        int64          `json:"id"`
	EmpID     sql.NullInt64  `json:"emp_id"`
	Amount    sql.NullString `json:"amount"`
	StartDate sql.NullTime   `json:"start_date"`
	EndDate   sql.NullTime   `json:"end_date"`
}

type PurchaseOrder struct {
	ID              int64         `json:"id"`
	EmpID           int64         `json:"emp_id"`
	CustomerContact string        `json:"customer_contact"`
	CustomerAddress string        `json:"customer_address"`
	Date            time.Time     `json:"date"`
	Closed          sql.NullInt32 `json:"closed"`
}

type Timecard struct {
	ID        int64         `json:"id"`
	EmpID     int64         `json:"emp_id"`
	StartDate sql.NullTime  `json:"start_date"`
	Committed sql.NullInt32 `json:"committed"`
}

type TimecardRecord struct {
	ID           int64     `json:"id"`
	ChargeNumber int64     `json:"charge_number"`
	CardID       int64     `json:"card_id"`
	Hours        int32     `json:"hours"`
	Date         time.Time `json:"date"`
}
